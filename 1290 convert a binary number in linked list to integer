/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        ListNode temp  = head;
       
        ListNode slow  = head;
        ListNode fast = head;
        int l=1;
        int count =0;
        while(fast!= null && fast.next!=null){
            count++;
            slow = slow.next;
            fast = fast.next.next;
            if(fast == null){
                l=count*2;
            }
            else if(fast.next ==null){
              l =  count*2 +1;
            }
        }
        temp = head;
        double num =0;
        l--;
        while(temp!=null){
         num = num + temp.val*Math.pow(2,l);
          temp = temp.next;
          l--;
        }
return (int)num;
         
    }
}
