class Solution {
    public int maxProfit(int[] prices) {
           
            int priceslength = prices.length;
        int macProfit = 0;
        int largest=0;
        for(int i =priceslength-1;i>-1;i--){
            //to not do operation on same digit again and again which is adjacent and same 
            if(i>0){
                if(prices[i]==prices[i-1]){
                    continue;
                }}


            if(i<priceslength-1){
            if(prices[i]<largest){
                      continue;         // to skip some of the cases which we know lesser profit than the largest
            }
            else{
                largest = prices[i];
            }
}
else{
    largest = prices[priceslength-1];    //largest intialisation
}
            for(int j =i-1;j>-1;j--){            // actual code;  // we skipped all redundant as well as smaller one
                  if(prices[i]-prices[j]>macProfit){
                    macProfit = prices[i]-prices[j];
                  }
            }
        }
    return macProfit;
    }
}
