  //{ Driver Code Starts
import java.util.*;


// } Driver Code Ends
class Solution {
    
    public void printArray(int[] arr2){
        for(int i =0;i<arr2.length;i++){
            
        System.out.print(arr2[i] + " ");
        }
        System.out.println();
    }
    public boolean isPossible(int k, int[] arr1, int[] arr2) {
        // Your code goes here.
        Arrays.sort(arr1);
        Arrays.sort(arr2);
        // printArray(arr1);
     
        // printArray(arr2);
        if((arr2[arr2.length-1] + arr1[arr1.length-1])<k){
            return false;
        }
        //reverse array2 
        for(int i =0;i<arr2.length/2;i++){
            //swap 
            int temp = arr2[i];
            arr2[i] = arr2[arr2.length-i-1];
            arr2[arr2.length-i-1] = temp;
        }
        // System.out.println("arr2 is after reversing");
        // printArray(arr2);
        for(int i =0;i<arr1.length;i++){
            if((arr1[i] + arr2[i])< k){
                return false;
            }
        }
     
    return true;
    }
    }


//{ Driver Code Starts.
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int k = sc.nextInt();
            sc.nextLine(); // Consume the newline character

            String[] arr1Str = sc.nextLine().split(" ");
            String[] arr2Str = sc.nextLine().split(" ");

            int[] arr1 = Arrays.stream(arr1Str).mapToInt(Integer::parseInt).toArray();
            int[] arr2 = Arrays.stream(arr2Str).mapToInt(Integer::parseInt).toArray();

            Solution solution = new Solution();
            boolean result = solution.isPossible(k, arr1, arr2);

            if (result) {
                System.out.println("true");
            } else {
                System.out.println("false");
            }
        }
        sc.close();
    }
}
// } Driver Code Ends
